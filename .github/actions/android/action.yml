name: "Android Workflow"

inputs:
  STORE_PASS:
    description: 'Store Password'
    required: false
    default: ''
  ALIAS:
    description: 'Certificate Alias'
    required: false
    default: ''
  KEY_PASS:
    description: 'Key Password'
    required: false
    default: ''
  VERSION_NAME:
    description: 'Version Name to be used for build'
    required: false
    default: '1.0.0'
  VERSION_CODE:
    description: 'Version Code to be used for build'
    required: true
    default: '1'
  pr_number:
    description: "Pull request number"
    required: false
    default: ''
  run_id:
    description: "GitHub Actions run ID"
    required: false
    default: ''
  repository:
    description: "Repository name"
    required: false
    default: ''
  pr_head_sha:
    description: "PR head commit SHA"
    required: false
    default: ''
  pr_head_ref:
    description: "PR head branch name"
    required: false
    default: ''
  github_server_url:
    description: "GitHub server URL"
    required: false
    default: ''
  github_token:
    description: "GitHub token for API access"
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'adopt'
        cache: 'gradle'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        cache: true
        flutter-version-file: pubspec.yaml

    - name: Fetch Dependencies
      shell: bash
      run: flutter pub get
      
    - name: Build Android APK/AAB
      shell: bash
      env:
        STORE_PASS: ${{ inputs.STORE_PASS }}
        ALIAS: ${{ inputs.ALIAS }}
        KEY_PASS: ${{ inputs.KEY_PASS }}
        VERSION_NAME: ${{inputs.VERSION_NAME}}
        VERSION_CODE: ${{inputs.VERSION_CODE}}
      run: |
        flutter build apk --debug --build-name $VERSION_NAME --build-number $VERSION_CODE
        flutter build apk --build-name $VERSION_NAME --build-number $VERSION_CODE
        flutter build appbundle --build-name $VERSION_NAME --build-number $VERSION_CODE
        
        # Check if release APK was built successfully
        if [ ! -f build/app/outputs/flutter-apk/app-release.apk ]; then
          echo "Release APK build failed"
          exit 1
        fi

    - name: Store APK files
      uses: actions/upload-artifact@v4
      id: upload-apk
      with:
        name: magic-epaper-apk-pr-${{ inputs.pr_number || 'build' }}
        path: |
          build/app/outputs/flutter-apk/app-debug.apk
          build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Get Artifact URLs
      if: inputs.pr_number != ''
      id: artifacts
      shell: bash
      run: |
        # Get the run ID for artifact URLs
        RUN_ID=${{ inputs.run_id }}
        REPO=${{ inputs.repository }}
        
        # Get workflow URL as fallback
        WORKFLOW_URL="https://github.com/$REPO/actions/runs/$RUN_ID"
        
        # Get direct artifact URL from upload-artifact v4 output
        APK_URL="${{ steps.upload-apk.outputs.artifact-url }}"
        
        echo "WORKFLOW_URL=$WORKFLOW_URL" >> $GITHUB_OUTPUT
        echo "APK_URL=$APK_URL" >> $GITHUB_OUTPUT

    - name: Create PR comment
      if: inputs.pr_number != '' && inputs.github_token != ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        body: |
          ## Build Status
          
          Build successful. APK to test: **[Download Android APK](${{ steps.artifacts.outputs.APK_URL }})**
          
          ---
          
          [View workflow run](${{ steps.artifacts.outputs.WORKFLOW_URL }})

    - name: Build status comment on failure
      if: failure() && inputs.pr_number != '' && inputs.github_token != ''
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        body: |
          ## Build Status
          
          Build failed. Please check the [workflow logs](${{ inputs.github_server_url }}/${{ inputs.repository }}/actions/runs/${{ inputs.run_id }}) for details.