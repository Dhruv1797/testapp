name: "PR Build and Comment"
description: "Build Flutter app and comment on PR with download links"

inputs:
  pr_number:
    description: "Pull request number"
    required: true
  run_id:
    description: "GitHub Actions run ID"
    required: true
  repository:
    description: "Repository name"
    required: true
  pr_head_sha:
    description: "PR head commit SHA"
    required: true
  pr_head_ref:
    description: "PR head branch name"
    required: true
  github_server_url:
    description: "GitHub server URL"
    required: true
  github_token:
    description: "GitHub token for API access"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version-file: pubspec.yaml
        cache: true

    - name: Fetch Dependencies
      shell: bash
      run: flutter pub get

    - name: Build Android APK
      shell: bash
      run: |
        flutter build apk --release
        if [ ! -f build/app/outputs/flutter-apk/app-release.apk ]; then
          echo "APK build failed"
          exit 1
        fi

    - name: Build iOS IPA
      shell: bash
      run: |
        # Build iOS without code signing by setting CODE_SIGNING_REQUIRED=NO
        flutter build ios --config-only
        cd ios && xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination generic/platform=iOS -archivePath build/Runner.xcarchive archive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        
        # Create IPA from archive
        mkdir -p build/Runner.xcarchive/Products/Applications/Payload
        cp -r build/Runner.xcarchive/Products/Applications/Runner.app build/Runner.xcarchive/Products/Applications/Payload/
        cd build/Runner.xcarchive/Products/Applications && zip -r ../../../../magic-epaper-unsigned.ipa Payload/

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-apk-pr-${{ inputs.pr_number }}
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-ipa-pr-${{ inputs.pr_number }}
        path: magic-epaper-unsigned.ipa
        retention-days: 30

    - name: Get Artifact URLs
      id: artifacts
      shell: bash
      run: |
        # Get the run ID for artifact URLs
        RUN_ID=${{ inputs.run_id }}
        REPO=${{ inputs.repository }}
        
        # Construct artifact download URLs
        APK_URL="https://github.com/$REPO/actions/runs/$RUN_ID/artifacts"
        IPA_URL="https://github.com/$REPO/actions/runs/$RUN_ID/artifacts"
        
        echo "APK_URL=$APK_URL" >> $GITHUB_OUTPUT
        echo "IPA_URL=$IPA_URL" >> $GITHUB_OUTPUT

    - name: Find existing comment
      uses: peter-evans/find-comment@v3
      id: find-comment
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        comment-author: 'github-actions[bot]'
        body-includes: '**Build Artifacts Ready**'

    - name: Create or update PR comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ inputs.pr_number }}
        edit-mode: replace
        body: |
          **Build Artifacts Ready**
          
          The build has completed successfully! Download the latest builds below:
          
          ## Download Links
          
          | Platform | Download |
          |----------|----------|
          | **Android APK** | [Download APK](${{ steps.artifacts.outputs.APK_URL }}) |
          | **iOS IPA** | [Download IPA](${{ steps.artifacts.outputs.IPA_URL }}) |
          
          ## Build Info
          - **Commit:** `${{ inputs.pr_head_sha }}`
          - **Branch:** `${{ inputs.pr_head_ref }}`
          
          ## Installation Instructions
          
          ### Android APK
          1. Download the APK file
          2. Enable "Install from Unknown Sources" in your device settings
          3. Install the APK file
          
          ### iOS IPA
          1. Download the IPA file
          2. Use tools like AltStore, Sideloadly, or Xcode to install
          3. Note: This is an unsigned build for testing purposes
          
          ---
          
          <sub>Built by GitHub Actions | Last updated: $(date -u)</sub>

    - name: Build status comment on failure
      if: failure()
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        body: |
          **Build Failed**
          
          The build process failed for this PR. Please check the [workflow logs](${{ inputs.github_server_url }}/${{ inputs.repository }}/actions/runs/${{ inputs.run_id }}) for details.
          
          **Failed at:** $(date -u)
          **Commit:** `${{ inputs.pr_head_sha }}`