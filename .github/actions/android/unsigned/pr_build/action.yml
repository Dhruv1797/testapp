name: "PR Build and Comment"
description: "Build Flutter app and comment on PR with download links"

inputs:
  pr_number:
    description: "Pull request number"
    required: true
  run_id:
    description: "GitHub Actions run ID"
    required: true
  repository:
    description: "Repository name"
    required: true
  pr_head_sha:
    description: "PR head commit SHA"
    required: true
  pr_head_ref:
    description: "PR head branch name"
    required: true
  github_server_url:
    description: "GitHub server URL"
    required: true
  github_token:
    description: "GitHub token for API access"
    required: true
 
runs:
  using: "composite"
  steps:
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version-file: pubspec.yaml
        cache: true

    - name: Fetch Dependencies
      shell: bash
      run: flutter pub get

    - name: Build Android APK
      shell: bash
      run: |
        flutter build apk --release
        if [ ! -f build/app/outputs/flutter-apk/app-release.apk ]; then
          echo "APK build failed"
          exit 1
        fi

    - name: Build iOS App (Simulator Build)
      shell: bash
      run: |
        # Build for iOS simulator instead of trying to create signed IPA
        # This bypasses all code signing issues
        flutter build ios --release --no-codesign
        
        # Create a zip of the iOS app bundle for distribution
        cd build/ios/iphoneos
        zip -r ../../../magic-epaper-ios-simulator.zip Runner.app/
        cd ../../../
        
        echo "iOS simulator build created successfully"

    - name: Create iOS Installation Script
      shell: bash
      run: |
        cat > ios_install_instructions.txt << 'EOF'
        iOS Installation Instructions:
        
        This is a simulator build. To install on a real device, you'll need:
        
        Option 1 - Use Xcode:
        1. Download the project source code
        2. Open ios/Runner.xcworkspace in Xcode
        3. Connect your iOS device
        4. Select your device as the target
        5. Click Run to install directly
        
        Option 2 - For Simulator Testing:
        1. Download the magic-epaper-ios-simulator.zip
        2. Extract the Runner.app
        3. Drag Runner.app to iOS Simulator
        
        Option 3 - Create your own IPA:
        1. Download source and build with your Apple Developer account
        2. Use flutter build ipa with your signing certificates
        
        Note: Unsigned IPAs cannot be installed on physical devices without jailbreaking.
        EOF

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-apk-pr-${{ inputs.pr_number }}
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Upload iOS Simulator Build
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-ios-simulator-pr-${{ inputs.pr_number }}
        path: magic-epaper-ios-simulator.zip
        retention-days: 30

    - name: Upload iOS Instructions
      uses: actions/upload-artifact@v4
      with:
        name: magic-epaper-ios-instructions-pr-${{ inputs.pr_number }}
        path: ios_install_instructions.txt
        retention-days: 30

    - name: Get Artifact URLs
      id: artifacts
      shell: bash
      run: |
        # Get the run ID for artifact URLs
        RUN_ID=${{ inputs.run_id }}
        REPO=${{ inputs.repository }}
        
        # Construct artifact download URLs
        ARTIFACTS_BASE_URL="https://github.com/$REPO/actions/runs/$RUN_ID/artifacts"
        
        echo "ARTIFACTS_URL=$ARTIFACTS_BASE_URL" >> $GITHUB_OUTPUT

    - name: Find existing comment
      uses: peter-evans/find-comment@v3
      id: find-comment
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        comment-author: 'github-actions[bot]'
        body-includes: '**Build Artifacts Ready**'

    - name: Create or update PR comment
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ inputs.pr_number }}
        edit-mode: replace
        body: |
          **Build Artifacts Ready** ‚úÖ
          
          The build has completed successfully! Download the latest builds below:
          
          ## üì± Download Links
          
          | Platform | Download | Status |
          |----------|----------|--------|
          | **ü§ñ Android APK** | [Download APK](${{ steps.artifacts.outputs.ARTIFACTS_URL }}) | Ready to install |
          | **üçé iOS Simulator** | [Download iOS Build](${{ steps.artifacts.outputs.ARTIFACTS_URL }}) | Simulator only |
          | **üìã iOS Instructions** | [Installation Guide](${{ steps.artifacts.outputs.ARTIFACTS_URL }}) | How to install on device |
          
          ## üîç Build Info
          - **Commit:** `${{ inputs.pr_head_sha }}`
          - **Branch:** `${{ inputs.pr_head_ref }}`
          - **Build Time:** $(date -u)
          
          ## üì≤ Installation Instructions
          
          ### Android APK
          1. **Download** the APK file from the artifacts
          2. **Enable** "Install from Unknown Sources" in Android settings
          3. **Install** the APK file directly
          
          ### iOS App
          **‚ö†Ô∏è Important:** This build cannot create installable IPAs without code signing certificates.
          
          **For Device Installation:**
          - Download the project source code
          - Open `ios/Runner.xcworkspace` in Xcode
          - Connect your device and run directly from Xcode
          
          **For Simulator Testing:**
          - Download the iOS Simulator build
          - Drag the app to iOS Simulator
          
          ---
          
          <sub>ü§ñ Built by GitHub Actions ‚Ä¢ Need help? Check the iOS Instructions artifact</sub>

    - name: Build status comment on failure
      if: failure()
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_number }}
        body: |
          **Build Failed** ‚ùå
          
          The build process failed for this PR. Please check the [workflow logs](${{ inputs.github_server_url }}/${{ inputs.repository }}/actions/runs/${{ inputs.run_id }}) for details.
          
          **Failed at:** $(date -u)
          **Commit:** `${{ inputs.pr_head_sha }}`
          **Branch:** `${{ inputs.pr_head_ref }}`
          
          Common issues:
          - Flutter dependencies might need updating
          - Build configuration errors
          - Platform-specific build issues
          
          Please check the logs and try again.